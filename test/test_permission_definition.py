# coding: utf-8

"""
    Permify API

    Permify is an open source authorization service for creating fine-grained and scalable authorization systems.

    The version of the OpenAPI document: v0.7.7
    Contact: hello@permify.co
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.permission_definition import PermissionDefinition

class TestPermissionDefinition(unittest.TestCase):
    """PermissionDefinition unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PermissionDefinition:
        """Test PermissionDefinition
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PermissionDefinition`
        """
        model = PermissionDefinition()
        if include_optional:
            return PermissionDefinition(
                name = '',
                child = openapi_client.models.child.Child(
                    leaf = openapi_client.models.leaf.Leaf(
                        computed_user_set = openapi_client.models.computed_user_set.ComputedUserSet(
                            relation = '', ), 
                        tuple_to_user_set = openapi_client.models.tuple_to_user_set.TupleToUserSet(
                            tuple_set = openapi_client.models.tuple_set.TupleSet(
                                relation = '', ), 
                            computed = openapi_client.models.computed_user_set.ComputedUserSet(
                                relation = '', ), ), 
                        computed_attribute = openapi_client.models.computed_attribute.ComputedAttribute(
                            name = '', ), 
                        call = openapi_client.models.v1/call.v1.Call(
                            rule_name = '', 
                            arguments = [
                                openapi_client.models.argument.Argument(
                                    context_attribute = openapi_client.models.context_attribute.ContextAttribute(
                                        name = '', ), )
                                ], ), ), 
                    rewrite = openapi_client.models.rewrite.Rewrite(
                        rewrite_operation = 'OPERATION_UNSPECIFIED', 
                        children = [
                            openapi_client.models.child.Child()
                            ], ), )
            )
        else:
            return PermissionDefinition(
        )
        """

    def testPermissionDefinition(self):
        """Test PermissionDefinition"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
