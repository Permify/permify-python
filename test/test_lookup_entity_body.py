# coding: utf-8

"""
    Permify API

    Permify is an open source authorization service for creating fine-grained and scalable authorization systems.

    The version of the OpenAPI document: v1.1.3
    Contact: hello@permify.co
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from permify.models.lookup_entity_body import LookupEntityBody

class TestLookupEntityBody(unittest.TestCase):
    """LookupEntityBody unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> LookupEntityBody:
        """Test LookupEntityBody
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `LookupEntityBody`
        """
        model = LookupEntityBody()
        if include_optional:
            return LookupEntityBody(
                metadata = permify.models.permission_lookup_entity_request_metadata.PermissionLookupEntityRequestMetadata(
                    schema_version = '', 
                    snap_token = '', 
                    depth = 56, ),
                entity_type = '',
                permission = '',
                subject = permify.models.subject.Subject(
                    type = '', 
                    id = '', 
                    relation = '', ),
                context = permify.models.context.Context(
                    tuples = [
                        permify.models.tuple.Tuple(
                            entity = permify.models.entity.Entity(
                                type = '', 
                                id = '', ), 
                            relation = '', 
                            subject = permify.models.subject.Subject(
                                type = '', 
                                id = '', 
                                relation = '', ), )
                        ], 
                    attributes = [
                        permify.models.attribute.Attribute(
                            attribute = '', 
                            value = {
                                'key' : None
                                }, )
                        ], 
                    data = permify.models.data.data(), ),
                scope = {
                    'key' : permify.models.string_array_value.StringArrayValue(
                        data = [
                            ''
                            ], )
                    },
                page_size = 56,
                continuous_token = ''
            )
        else:
            return LookupEntityBody(
        )
        """

    def testLookupEntityBody(self):
        """Test LookupEntityBody"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
